<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Weather Forecasting</title>
    <link rel="stylesheet" href="style.css">
    <style>
*,*::before,*::after{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    overflow-x: hidden;
    font-family:Verdana, Geneva, Tahoma, sans-serif;
}

:root{
    --colorDark1:#112D4E;
    --colorDark2:#3F72AF;
    --colorLight1:#DBE2EF;
    --colorLight2:#F9F7F7;
}
.wrapper{
    width: 65%;
    height:850px;
    margin: auto;
    justify-content: center;
    align-items: center;
    color: black;
    font-size: large;
    background: #4caf50;
    border-radius: 10px;
    margin-bottom: 2rem;
}
h1{
    text-align: center;
    text-transform: uppercase;
    padding-top: 20px;

}
.tab-container{
    width: 90%;
    max-width: 550px;
    display: flex;
    justify-content: space-between;
    margin: 0 auto;
    margin-top: 2rem;
    

}
.tab{
    cursor: pointer;
    font-size: 1;
    padding: 5px 8px;
    text-align: center;

}
.tab.current-tab{
    background-color: rgba(2, 73, 13, 0.5);
    border-radius: 4px;
}

.weather-container{
    /* display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column; */
    margin-block: 2rem;
}
.btn{
    all: unset;
    font-size: 0.85rem;
    text-transform: uppercase;
    border-radius: 5px;
    background-color:#045407;
    cursor: pointer;
    padding: 10px 30px;
    margin-bottom: 10px;
}
.sub-container{
    display: flex;
    flex-direction: column;
    align-items: center;
}
.grant-location-container{
     display: none; 
}
.grant-location-container.active{
    display: flex;
}
.grant-location-container img{
    margin-bottom: 2rem;
   
}
.grant-location-container p:first-of-type{
    font-size: 1.75rem;
    font-weight: 600;
    text-align: center;

} 
.grant-location-container p:last-of-type{
    font-size: 0.85rem;
    font-weight: 500;
    margin-top: 0.75rem;
    margin-bottom: 1.75rem;
    letter-spacing: 0.75px;
}
.loading-container{
    display: none;
}
.loading-container.active{
    display: flex;
}
.loading-container p{
    text-transform: uppercase;

}
.user-info-container {
    display: none;
}
.user-info-container.active{
    display: flex;
}
.name {
    display: flex;
    flex-direction: row;
    align-items: center;
    gap: 0 0.5rem;
    margin-bottom: 1rem;
}
.user-info-container{
    font-size: 1.5rem;
    font-weight: 200;
}
.user-info-container img{
    width: 90px;
    height: 90px;
}
.name p{
    font-size: 2rem;
}
.name img{
    width: 30px;
    height: 30px;

}

.user-info-container p[data-temp]{
    font-size: 2.75rem;
    font-weight: 700;
}
.parameter-container{
    display: flex;
    gap: 10px 20px;
    justify-content: center;
    align-items: center;
    margin-top: 2rem;
}
.parameter{
    width: 30%;
    max-width: 200px;
    background-color: rgba(2, 73, 13, 0.5);
    border-radius: 5px;
    padding: 1rem;
    display: flex;
    flex-direction: column;
    gap: 5px 0;
}
.parameter img{
    width: 50px;
    height: 50px;
}
.parameter p:first-of-type{
    font-size: 1.15rem;
    font-weight: 600;
    text-transform: uppercase;

}
.parameter p:last-of-type{
    font-size: 1rem;
    font-weight: 200;
}
footer {
    background-color: #28a745;
    color: #fff;
    padding: 20px;
    text-align: center;
}
.form-container{
    display: none;
    /* display: flex; */
    width: 90%;
    max-width: 550px;
    margin: 0 auto;
    justify-content: center;
    align-items: center;
    gap: 0 10px;
    margin-bottom: 3rem;
}
.form-container.active{
    display: flex;
}
.form-container input{
    all: unset;
    width: calc(100% - 80px);
    height: 40px;
    padding: 0 20px;
    background-color: rgba(141, 250, 133, 0.5);
    border-radius: 10px;
    color: black;
}
.form-container input::placeholder{
    color: black;
}
.form-container .btn{
    padding: unset;
    width: 40px;
    height: 40px;
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 100%;
    margin-bottom: 1px;
}
@media screen and (max-width:780px){
    .wrapper{
        width:95%;
        font-size: large;

    }
    .wrapper h1{
        font-size: 1.3rem;
        font-weight: bolder;
    }
    .parameter{
        width: 100%;
    }
    .parameter-container {
        display: flex;
        flex-direction: column  ;
        gap: 10px 20px;
        justify-content: center;
        align-items: center;
        
    }
}

    </style>
</head>

<body>
    {{>navbar}}
    <br>
    <div class="wrapper">
        <h1>FarmAssist Weather Forecasting</h1>
        
        <div class="tab-container">
            <p class="tab" data-userWeather>Your Weather</p>
            <p class="tab" data-searchWeather>Search weather </p>
        </div>
 
        <div class="weather-container">
            <div class="sub-container grant-location-container">
                <img src="location.png" width="130" height="130" alt="" >
                <p>Grant Location Access</p>
                <p>Allow access to get weather Information</p>
                <button class="btn" data-grantAccess>Grant Access</button>
            </div>

            <!-- search form -->
            <form class="form-container" data-searchForm>
                <input placeholder="Search For City" data-searchInput>
                <button class="btn" type="submit">
                    <img src="search.png" alt="" width="20" height="20" > 
                </button>
            </form>
             
            <!-- loading screen -->
            <div class="sub-container loading-container">
                <img src="loading.gif" alt="" width="150" height="150">
                <p>Loading</p>
            </div>

            <!-- Show weather -->
            <div class="sub-container user-info-container">
                <div class="name">
                    <p data-cityName></p>
                    <img data-countryIcon>
                </div>

                <p data-weatherDesc></p>
                <img data-weatherIcon>
                <p data-temp></p>
                <!-- cards -->
                <div class="parameter-container">
                    <!-- card 1 -->
                    <div class="sub-container parameter">
                        <img src="wind.png" alt="">
                        <p>Windspeed</p>
                        <p data-windSpeed></p>
                    </div>
                    <!-- card 2 -->
                    <div class="sub-container parameter">
                        <img src="humidity.png" alt="">
                        <p>Humidity</p>
                        <p data-humidity></p>
                    </div>

                    <div class="sub-container parameter">
                        <img src="cloud.png" alt="">
                        <p>Clouds</p>
                        <p data-cloudiness></p>
                    </div>
                </div>
            </div>


        </div>

    </div>
    <footer>
            <p>&copy; 2023 FarmAssist. All rights reserved.</p>
        </footer>
    <script>
         const userTab=document.querySelector('[data-userWeather]');
 const searchTab=document.querySelector('[data-searchWeather]');
 const userContainer=document.querySelector('.weather-container');
 const grantAccessContainer=document.querySelector('.grant-location-container');
 const searchForm=document.querySelector('[data-searchForm]');
 const loadingScreen=document.querySelector('.loading-container');
 const userInfoContainer=document.querySelector('.user-info-container');

 let currentTab=userTab;
 const API_KEY='d1845658f92b31c64bd94f06f7188c9c';
 currentTab.classList.add("current-tab");
getFromSessinStorage();
function switchTab(clickedTab){
    if (clickedTab!=currentTab) {
        currentTab.classList.remove("current-tab");
        currentTab=clickedTab;
        currentTab.classList.add("current-tab");

        if(!searchForm.classList.contains("active")){
            userInfoContainer.classList.remove("active");
            grantAccessContainer.classList.remove("active");
            searchForm.classList.add("active");
        }
        else{
            searchForm.classList.remove('active');
            userInfoContainer.classList.remove("active");
            getFromSessinStorage();
        }
    }
}
userTab.addEventListener("click",()=>{
    switchTab(userTab);
});

searchTab.addEventListener("click",()=>{
    switchTab(searchTab);
});

function getFromSessinStorage(){
    const localCoordinates=sessionStorage.getItem('user-coordinates');
    if(!localCoordinates){
        grantAccessContainer.classList.add('active');
    }
    else{
        const coordinates=JSON.parse(localCoordinates);
        fetchUserWeatherInfo(coordinates);
    }
}
async function fetchUserWeatherInfo(coordinates){
    const {lat,lon}=coordinates;
    grantAccessContainer.classList.remove("active");
    loadingScreen.classList.add("active");
    try{
        const response=await fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=${API_KEY}&units=metric`);
        const data=await response.json();
        loadingScreen.classList.remove("active");
        userInfoContainer.classList.add("active");
        renderWeatherInfo(data);
    }
    catch(err){
        loadingScreen.classList.remove("active");
    }
}
function renderWeatherInfo(weatherInfo){
    const cityName=document.querySelector("[data-cityName]");
    const countryIcon=document.querySelector("[data-countryIcon]");
    const desc=document.querySelector("[data-weatherDesc]");
    const weatherIcon=document.querySelector("[data-weatherIcon]");
    const temp=document.querySelector("[data-temp]");
    const windspeed=document.querySelector("[data-windspeed]");
    const humidity=document.querySelector("[data-humidity]");
    const cloudiness=document.querySelector("[data-cloudiness]")

    cityName.innerText=weatherInfo?.name.toUpperCase();
    countryIcon.src= `https://flagcdn.com/144x108/${weatherInfo?.sys?.country.toLowerCase()}.png`;
    desc.innerText=weatherInfo?.weather?.[0]?.description.toUpperCase();
    weatherIcon.src=`http://openweathermap.org/img/w/${weatherInfo?.weather?.[0]?.icon}.png`;
    temp.innerText=`${weatherInfo?.main?.temp} °C`;
    windspeed.innerText=`${weatherInfo?.wind?.speed} m/s`;
    humidity.innerText=`${weatherInfo?.main?.humidity}%`;
    cloudiness.innerText=`${weatherInfo?.clouds?.all}%`;

}
function getLocation(){
    if (navigator.geolocation) {
        navigator.geolocation.getCurrentPosition(showPosition)
    }
    else{
        alert('No geolocation support available');
    }
}
function showPosition(position) {
    const userCoordinates={
    lat:position.coords.latitude,
    lon:position.coords.longitude,
    }
    sessionStorage.setItem('user-coordinates',JSON.stringify(userCoordinates));
    fetchUserWeatherInfo(userCoordinates);  
}
const grantAccessButton=document.querySelector('[data-grantAccess]');
grantAccessButton.addEventListener('click',getLocation);

const searchInput=document.querySelector('[data-searchInput]');
searchForm.addEventListener('submit',(e)=>{
    e.preventDefault();
    let cityName=searchInput.value;
    if(cityName===''){
        return;
    }
    else{
        fetchSearchUserWeatherInfo(cityName);
    }
})
async function fetchSearchUserWeatherInfo(city){
    loadingScreen.classList.add('active');
    userInfoContainer.classList.remove('active');
    grantAccessContainer.classList.remove('active');
    try{
        const res=await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}&units=metric`);
        const data=await res.json();
        loadingScreen.classList.remove('active');
        userInfoContainer.classList.add('active');
        renderWeatherInfo(data);
    }
    catch(e){

    }
}
    </script>
</body>
</html>