<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Get Crops Now</title>
            <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">

    <style>
        body {
  font-family: 'Arial', sans-serif;
  margin: 0;
  padding: 0;
  background-color: #f8f8f8;
}


.top{
    margin-top: -3rem;
    background-color: #4CAF50;
  color: #fff;
  text-align: center;
  padding: 20px 0;
}
.top h1 {
  font-size: 2.5rem;
  margin-top: 1rem;
}

.top p {
  font-size: 1.2rem;
}

main {
  margin: auto;
  padding: 20px;
}

form {
  background-color: rgb(181, 244, 187);
  border-radius: 10px;
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
  padding: 20px;
  width: 700px;
  animation: fadeInUp 1s ease-out;
  
}

form label {
  
  margin-bottom: 10px;
  color: #333;
  font-size: 1.1rem;
  
}



button {
  background-color: #4CAF50;
  color: #fff;
  border: none;
  padding: 10px 20px;
  border-radius: 5px;
  cursor: pointer;
  font-size: 1rem;
}
ul {
  list-style: none;
  padding: 0;
}



footer {
    background-color: #28a745;
    color: #fff;
    padding: 20px;
    text-align: center;
}
form input,
form select {
  width: 100%;
  padding: 10px;
  margin-bottom: 20px;
  border: 1px solid #ddd;
  border-radius: 5px;
}

button {
  background-color: #4CAF50;
  color: #fff;
  border: none;
  padding: 10px 20px;
  border-radius: 5px;
  cursor: pointer;
  font-size: 1rem;
}

button:hover {
  background-color: #45a049;
}

#recommendations {
  display: none;
  margin-top: 20px;
}

ul {
  list-style: none;
  padding: 0;
}

li {
  color: #333;
}
#recommendations {
  display: none;
  margin-top: 20px;
  padding: 20px;
  background-color: #fff;
  border-radius: 10px;
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
}

.recommendation-header {
  color: #4CAF50;
  font-size: 2rem;
  margin-bottom: 10px;
}

.recommendation-list {
  list-style: none;
  padding: 0;
}

.recommendation-list li {
  background-color: #f8f8f8;
  border-radius: 5px;
  padding: 10px;
  margin-bottom: 10px;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  transition: background-color 0.3s ease-in-out;
}

.recommendation-list li:hover {
  background-color: #e6e6e6;
  cursor: pointer;
}
h5:hover{
        background-color: #c5c5c5;
        color: black;
       
        
      }
h5{
     padding-right: 1rem;
     padding-left: 1rem;
     padding-top: 0.5rem;
}
table {
    caption-side: bottom;
    border-spacing: 7px;
    width: 558px;
}

@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(20px);
  }

  to {
    opacity: 1;
    transform: translateY(0);
  }
}

    </style>
</head>
<body>
     {{>navbar}}
    <br><br>
  <div class="top">
    <h1>Get Your Personalized Crops here</h1>
    <p>Explore the crops that suit your farm.</p>
  </div>
  <main>
    <form id="userForm" style="margin: auto;" cellpadding="10px" cellspacing="20px">
        <table style="margin: auto;">
          <tr>
            <td><label for="cropType">Enter the value of Nitrogen (%)<span style="color: red;">*</span></label></td>
            <td> <input type="number" id="nitrogen"  class="tdd" name="nitrogen" required placeholder="For eg. 45"></td>
          </tr>
          <tr>
            <td><label for="cropType">Enter the value of Phosphorus (%)<span style="color: red;">*</span> </label></td>
            <td> <input type="number" id="phosphorus" name="phosphorus" required placeholder="For eg. 45"></td>
          </tr>
          <tr>
            <td><label for="cropType">Enter the value of Potassium (%)<span style="color: red;">*</span></label></td>
            <td><input type="number" id="potassium" name="potassium" required placeholder="For eg. 45"></td>
          </tr>
          <tr>
            <td><label for="cropType">Enter the value of Ph Value <span style="color: red;">*</span> </label></td>
            <td><input type="number" id="phvalue" name="phvalue" required placeholder="Ph value range 1-14"></td>
          </tr>
          <tr>
            <td><label for="cropType">Enter the value of Rainfall in (mm) <span style="color: red;">*</span></label></td>
            <td><input type="number" id="rainfall" name="rainfall" required placeholder="For eg. 115.323"></td>
          </tr>
          <tr>
            <td><label for="cropType">Enter the value of Temperature ( &deg;C )<span style="color: red;">*</span></label></td>
            <td><input type="number" id="temperature" name="temperature" required placeholder="For eg. 42"></td>
          </tr>
          <tr>
            <td><label for="cropType">Enter the value of Humidity <span style="color: red;">*</span></label></td>
            <td><input type="number" id="humidity" name="humidity" required placeholder="For eg. 35"></td>
          </tr>
          <tr >
            <td colspan="2" style="text-align:center;"><button type="button" id="recommendBtn" onclick="recommendCrops()">Recommend Crop</button></td>
          </tr>
          <tr>
            <td colspan="2" style="display: hidden;margin-top:2rem;text-align:center;font-size:1.2rem;font-weight:bolder;" id="displayRec"></td>
          </tr>
        </table>
            {{!-- <label for="cropType">Enter the value of Nitrogen </label>
            <input type="number" id="nitrogen" name="nitrogen" required>
            <label for="cropType">Enter the value of Phosphorus </label>
            <input type="number" id="phosphorus" name="phosphorus" required>
            <label for="cropType">Enter the value of Potassium </label>
            <input type="number" id="potassium" name="potassium" required>
            <label for="cropType">Enter the value of Ph Value </label>
            <input type="number" id="phvalue" name="phvalue" required>
            <label for="cropType">Enter the value of Rainfall in (mm) </label>
            <input type="number" id="rainfall" name="rainfall" required>
            <label for="cropType">Enter the value of Temperature </label>
            <input type="number" id="temperature" name="temperature" required>
            <label for="cropType">Enter the value of Humidity </label>
            <input type="number" id="humidity" name="humidity" required> --}}

            
        </form>

    
  </main>
  <div id="recommendedCrops"></div>

  <footer>
        <p>&copy; 2023 FarmAssist. All rights reserved.</p>
    </footer>

 <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <script>
        // JavaScript function to recommend schemes
        async function recommendCrops() {
            // Collect form data
            const formData = {
                nitrogen: document.getElementById('nitrogen').value,
                phosphorus: document.getElementById('phosphorus').value,
                potassium: document.getElementById('potassium').value,
                phvalue: document.getElementById('phvalue').value,
                rainfall: document.getElementById('rainfall').value,
                temperature: document.getElementById('temperature').value,
                humidity: document.getElementById('humidity').value,
            };

            try {
                // Make a POST request to the backend API
                 const timestamp = new Date().getTime();
        
        // Make a POST request to the backend API with the timestamp
                const response = await axios.post(`https://crop-predict-fxeb.onrender.com/predict?timestamp=${timestamp}`, formData);

                // Handle the response, update UI, etc.
                console.log(response.data);
                displayRecommendations(response.data);
            } catch (error) {
                console.error('Error:', error);
            }
        }

        // Modify the displayRecommendations function
  function displayRecommendations(recommendedSchemesObj) {
    console.log('Received recommendations:', recommendedSchemesObj);
      const recommendationsDiv = document.getElementById('displayRec');
      let recomScheme = recommendedSchemesObj.prediction;
      recomScheme = recomScheme.toUpperCase();
      console.log(recomScheme)
      
      // Clear previous content
      recommendationsDiv.innerHTML = '';

      

     

        if (recomScheme.length === 0) {
            recommendationsDiv.innerHTML = '<p>No recommendations available.</p>';
        } else {
            
            recommendationsDiv.innerHTML = `Recommended Crop is ${recomScheme}`;
            recommendationsDiv.style.visibility="visible";

        }
  }



    </script>
  

<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.10.2/dist/umd/popper.min.js" integrity="sha384-7+zCNj/IqJ95wo16oMtfsKbZ9ccEh31eOz1HGyDuCQ6wgnyJNSYdrPa03rtR1zdB" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.min.js" integrity="sha384-QJHtvGhmr9XOIpI6YVutG+2QOK9T+ZnN4kzFN1RtK3zEFEIsxhlmWl5/YESvpZ13" crossorigin="anonymous"></script>
</body>
</html>